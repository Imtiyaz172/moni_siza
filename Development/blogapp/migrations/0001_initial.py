# Generated by Django 2.0.3 on 2020-05-04 15:30

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='about_us',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=50)),
                ('logo', models.ImageField(blank=True, upload_to='logo/')),
                ('phone', models.CharField(blank=True, max_length=16)),
                ('email', models.CharField(blank=True, max_length=36)),
                ('address', models.CharField(blank=True, max_length=76)),
                ('facebook', models.CharField(blank=True, max_length=276)),
                ('twiter', models.CharField(blank=True, max_length=76)),
                ('location', models.TextField(blank=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'about_us',
                'verbose_name_plural': 'about_us',
            },
        ),
        migrations.CreateModel(
            name='chapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'chapter',
                'verbose_name_plural': 'chapters',
            },
        ),
        migrations.CreateModel(
            name='classes',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.FileField(blank=True, upload_to='class/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'classes',
                'verbose_name_plural': 'classes',
            },
        ),
        migrations.CreateModel(
            name='classsubject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=100)),
                ('status', models.BooleanField(default=True)),
                ('classes', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.classes')),
            ],
            options={
                'verbose_name': 'class and subject',
                'verbose_name_plural': 'classes and subjects',
            },
        ),
        migrations.CreateModel(
            name='inspire_reg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('heading', models.CharField(blank=True, max_length=20)),
                ('slider_image', models.ImageField(blank=True, upload_to='inspire_reg/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'inspire of registration',
                'verbose_name_plural': 'inspire of registration',
            },
        ),
        migrations.CreateModel(
            name='owner',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('designation', models.CharField(blank=True, max_length=76)),
                ('image', models.ImageField(blank=True, upload_to='owner/')),
                ('phone', models.CharField(blank=True, max_length=16)),
                ('email', models.CharField(blank=True, max_length=36)),
                ('facebook', models.CharField(blank=True, max_length=276)),
                ('instagram', models.CharField(blank=True, max_length=276)),
                ('twiter', models.CharField(blank=True, max_length=76)),
                ('speach', models.TextField(blank=True)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'owner',
                'verbose_name_plural': 'owner',
            },
        ),
        migrations.CreateModel(
            name='question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ques_type', models.CharField(choices=[('MCQ', 'MCQ'), ('Multiple_MCQ', 'Multiple_MCQ'), ('text', 'text'), ('image', 'image'), ('Multiple_image', 'Multiple_image')], max_length=20)),
                ('ques_level', models.CharField(choices=[('High', 'High'), ('Medium', 'Medium'), ('Low', 'Low')], max_length=20)),
                ('title', models.CharField(blank=True, max_length=200)),
                ('body', ckeditor.fields.RichTextField(blank=True)),
                ('image', models.FileField(blank=True, upload_to='question/')),
                ('direct_input_op', models.CharField(blank=True, max_length=200)),
                ('text_op_1', models.CharField(blank=True, max_length=50)),
                ('text_op_2', models.CharField(blank=True, max_length=50)),
                ('text_op_3', models.CharField(blank=True, max_length=50)),
                ('text_op_4', models.CharField(blank=True, max_length=50)),
                ('img_op_1', models.FileField(blank=True, upload_to='question/')),
                ('img_op_2', models.FileField(blank=True, upload_to='question/')),
                ('img_op_3', models.FileField(blank=True, upload_to='question/')),
                ('img_op_4', models.FileField(blank=True, upload_to='question/')),
                ('ans_op_1', models.BooleanField(default=False)),
                ('ans_op_2', models.BooleanField(default=False)),
                ('ans_op_3', models.BooleanField(default=False)),
                ('ans_op_4', models.BooleanField(default=False)),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'Question',
                'verbose_name_plural': 'Questions',
            },
        ),
        migrations.CreateModel(
            name='subject',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.FileField(blank=True, upload_to='subject/')),
                ('status', models.BooleanField(default=True)),
            ],
            options={
                'verbose_name': 'subject',
                'verbose_name_plural': 'subjects',
            },
        ),
        migrations.CreateModel(
            name='subjectchapter',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=200)),
                ('status', models.BooleanField(default=True)),
                ('chapter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.chapter')),
                ('classsubject', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.classsubject')),
            ],
            options={
                'verbose_name': 'chapter of subject',
                'verbose_name_plural': 'chapters of subjects',
            },
        ),
        migrations.CreateModel(
            name='user_answer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text_choose', models.CharField(blank=True, max_length=50)),
                ('ans_choose_op_1', models.BooleanField(default=False)),
                ('ans_choose_op_2', models.BooleanField(default=False)),
                ('ans_choose_op_3', models.BooleanField(default=False)),
                ('ans_choose_op_4', models.BooleanField(default=False)),
                ('is_correct_ans', models.BooleanField(default=False)),
                ('time', models.DateTimeField(auto_now_add=True)),
                ('mark', models.IntegerField(default=0)),
                ('status', models.BooleanField(default=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.question')),
            ],
            options={
                'verbose_name': 'user_answer',
                'verbose_name_plural': 'user_answers',
            },
        ),
        migrations.CreateModel(
            name='user_reg',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('email', models.EmailField(blank=True, max_length=80)),
                ('mobile', models.CharField(max_length=18)),
                ('user_image', models.ImageField(blank=True, upload_to='user_image/')),
                ('password', models.CharField(max_length=100)),
                ('address', models.TextField(blank=True)),
                ('school', models.TextField(blank=True)),
                ('user_class', models.TextField(blank=True)),
                ('roll', models.TextField(blank=True)),
                ('point', models.IntegerField(default=0)),
                ('reg_date', models.DateField(auto_now_add=True)),
                ('user_type', models.CharField(blank=True, choices=[('Student', 'Student'), ('Teacher', 'Teacher'), ('Guardian', 'Guardian'), ('Job finder', 'Job finder')], max_length=20)),
                ('status', models.BooleanField(default=False)),
            ],
            options={
                'verbose_name': 'User information',
                'verbose_name_plural': 'Users informations',
            },
        ),
        migrations.AddField(
            model_name='user_answer',
            name='user_reg',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.user_reg'),
        ),
        migrations.AddField(
            model_name='question',
            name='subjectchapter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.subjectchapter'),
        ),
        migrations.AddField(
            model_name='classsubject',
            name='subject',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='blogapp.subject'),
        ),
    ]
